{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","routes/Gweet.js","components/GweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","AuthForm","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","newAccount","setNewAccount","_useState7","_useState8","error","setError","onChange","event","_event$target","target","name","value","onSubmit","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","t0","message","stop","_x","apply","this","arguments","react_default","a","createElement","Fragment","className","type","placeholder","required","onClick","Auth","onSocialClick","Auth_regeneratorRuntime","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","sent","index_es","icon","faTwitter","color","size","style","marginBottom","components_AuthForm","faGoogle","faGithub","Gweet","gweetObj","isOwner","editing","setEditing","text","newGweet","setNewGweet","onDeleteClick","_ref2","Gweet_regeneratorRuntime","window","confirm","doc","concat","id","delete","attachmentUrl","refFromURL","toggleEditing","_ref3","_callee2","_context2","update","key","autoFocus","src","class","faTrash","faPencilAlt","GweetFactory","userObj","gweet","setGweet","attachment","setAttachment","GweetFactory_regeneratorRuntime","attachmentRef","response","abrupt","ref","child","uid","uuidv4","putString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","onFileChange","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","maxLength","accept","for","faPlus","opacity","backgroundImage","faTimes","Home","gweets","setGweets","useEffect","onSnapshot","snapshot","gweetArray","docs","map","objectSpread","data","components_GweetFactory","marginTop","routes_Gweet","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","onLogOutClick","signOut","push","getMyGweets","Profile_regeneratorRuntime","where","orderBy","get","console","log","updateProfile","Navigation","display","justifyContent","react_router_dom","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","components_Navigation","react_router","maxWidth","width","margin","path","routes_Home","routes_Profile","from","routes_Auth","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","Router","getFullYear","ReactDOM","createRoot","document","getElementById","render","StrictMode","components_App"],"mappings":"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","file":"static/js/main.3126df10.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA0O_UTUKFrIwUaRdTMhNbS3TilpmYDmkI\",\r\n  authDomain: \"gwitter-f1743.firebaseapp.com\",\r\n  projectId: \"gwitter-f1743\",\r\n  storageBucket: \"gwitter-f1743.appspot.com\",\r\n  messagingSenderId: \"956764618271\",\r\n  appId: \"1:956764618271:web:68b44185c2c0234d29df2a\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig); /*init firebase */\r\n\r\n/*전체를 export하기 보다는 필요한 서비스만 불러오기 */\r\nexport const authService = firebase.auth(); /*export auth service of the official fb*/\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport { authService } from '../fBase';\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        }else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                //create account \r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                //log in \r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input className=\"authInput\" name = \"email\" type=\"text\" placeholder='Email' value = {email} required onChange={onChange} />\r\n                <input className=\"authInput\" name = \"password\" type=\"password\" placeholder='password' value = {password} required onChange={onChange} />\r\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Sign In\" : \"Sign Up\"} />  \r\n            </form>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Log in\" : \"Create Account\"}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from '../components/AuthForm';\r\nimport React from 'react';\r\nimport { authService, firebaseInstance } from '../fBase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    // social log in \r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}} = event;\r\n\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n          <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            style={{ marginBottom: 30 }}\r\n          />\r\n          <AuthForm />\r\n          <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n              Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n              Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import { dbService, storageService } from '../fBase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Gweet = ({gweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newGweet, setNewGweet] = useState(gweetObj.text);\r\n    \r\n    \r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this gweet?\");\r\n        if (ok) {\r\n            //delete gweet! \r\n            await dbService.doc(`gweets/${gweetObj.id}`).delete();\r\n            if(gweetObj.attachmentUrl !== \"\" ){\r\n                await storageService.refFromURL(gweetObj.attachmentUrl).delete();\r\n                }\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => {\r\n        setEditing(prev => !prev);\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewGweet(value);\r\n\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`gweets/${gweetObj.id}`).update({\r\n            text: newGweet,\r\n        });\r\n\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div key={gweetObj.id} className=\"nweet\">\r\n            {\r\n                editing ? (<>\r\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                                <input onChange={onChange} type=\"text\" placeholder='Edit your Gweet' value={newGweet} required autoFocus className=\"formInput\"/>\r\n                                <input type=\"submit\" value=\"update\" className=\"formBtn\"/>\r\n                            </form>\r\n                            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                            </>\r\n                ) : (\r\n                    <>\r\n                    <h4>{gweetObj.text}</h4>\r\n                    {gweetObj.attachmentUrl && <img src={gweetObj.attachmentUrl}/>}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                    )}\r\n                    </>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gweet;\r\n\r\n","import React, {useState} from 'react';\r\nimport {v4 as uuidv4} from \"uuid\"\r\nimport { collection, addDoc, } from \"firebase/firestore\"\r\nimport { dbService, storageService } from '../fBase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst GweetFactory = ({userObj}) => {\r\n    const [gweet, setGweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (gweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const gweetObj = {\r\n            text: gweet,\r\n            createdAt: Date.now(),\r\n            /*store who wrote this tweet */\r\n            creatorId: userObj.userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n\r\n        /*add whatever data you want */\r\n        await addDoc(collection(dbService, \"gweets\"), gweetObj);\r\n        setGweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target:{value},} = event;\r\n        setGweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {target:{files},} = event;\r\n        const theFile = files[0]; // my file\r\n\r\n        //try to read file\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(theFile);//get data by url\r\n        reader.onloadend = (finishedEvent) => { // it is called after reader loads data\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    \r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <input value = {gweet}\r\n                type=\"text\" \r\n                onChange={onChange}\r\n                placeholder=\"what's on your mind?\"\r\n                maxLength={120} \r\n                className=\"factoryInput__container\"/>\r\n        <input onChange = {onFileChange} type=\"file\" accept=\"image/*\" />\r\n        <input type=\"submit\" value=\"Gwitt!\" className=\"factoryInput__arrow\"/>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }} />\r\n\r\n\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n                <img src={attachment}  style={{\r\n              backgroundImage: attachment,\r\n            }}/>\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>)}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default GweetFactory;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from '../fBase';\r\nimport Gweet from './Gweet';\r\nimport GweetFactory from '../components/GweetFactory';\r\n\r\nconst Home = (userObj) => {\r\n    const [gweets, setGweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        //snapshot: db의 모든 정보를 담고 있음.\r\n        /*init all gweets on the DB*/\r\n        dbService.collection(\"gweets\").onSnapshot((snapshot) => {\r\n            const gweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data()}));\r\n            setGweets(gweetArray);       \r\n        })},[]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <GweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {gweets.map((gweet) => (\r\n                    <Gweet key={gweet.id} gweetObj={gweet} \r\n                            isOwner={gweet.creatorId === userObj.userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;","import { authService, dbService } from '../fBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const getMyGweets = async() => {\r\n        // query and filter & order data.\r\n        const gweets = await dbService.collection(\"gweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\r\n        console.log(gweets.docs.map(doc => doc.data));\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getMyGweets();\r\n    }, []);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value},} = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <form onSubmit={onSubmit} className=\"profileForm\">\r\n                    <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                    />\r\n                    <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                    />\r\n                </form>\r\n                <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                    Log Out\r\n                </span>\r\n            </div>\r\n            <button onClick={onLogOutClick}>Log out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({userObj}) => {\r\n    console.log(userObj);\r\n\r\n    return(<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>);\r\n};\r\n\r\nexport default Navigation;","import React, {useState} from 'react';\r\nimport {HashRouter as Router,\r\n        Route, Switch, Redirect} from 'react-router-dom';\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nconst AppRouter =  ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router> \r\n            {isLoggedIn && <Navigation userObj={userObj}/>} \r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <>\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                    <Route path = \"/\" >\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route path = \"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                    </div>\r\n                </>\r\n                ) : (\r\n                <>\r\n                    <Route path = \"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useState, useEffect} from 'react';\nimport AppRouter from './Router';\nimport {authService} from '../fBase';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  /*authService.currentUser: defult val == null */\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  // 맨 처음 페이지를 로드할 때 로그인이 되어있어도 \n  // fb가 로드 되어 있지 않기 때문에 로그인이 되어있지 않음\n  // 그러므로 fb가 로드 될 때까지 기다려줘야 함.\n  \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // 유저가 sign in / sign up / 이미 로그인 했을 때\n        setIsLoggedIn(true);\n        setUserObj({\n         displayName: user.displayName,\n         uid:user.uid,\n         updateProfile: (args) => (user.updateProfile(args)),\n        }); // save user obj as data\n      } else {\n        //유저가 아직 로그인 전일 때\n        //유저가 로그아웃 했을 때\n        setIsLoggedIn(false);\n        setUserObj(\"\");\n      }\n      setInit(true);\n    }); \n  }, [])\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // user profile이 update 되었을 때\n    // 변화를 감지하고, 이 변화가 적용된 새로운 유저 정보를\n    // 사용하여 컴포넌트를 렌더링하기 위해 \n    // 이 함수를 다른 파일에 전달해줌\n\n    // 정보를 제대로 전달해주고 있는데, userObj 자체가 너무 커서 \n    // 새로운 값이 들어왔는지 확인하기 위해 정보를 비교할 때\n    // 곤란함.\n\n    // 두가지 해결방법이 있음\n    // 1. obj 자체의 크기를 줄여주기\n    setUserObj({\n      displayName: user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => (user.updateProfile(args)),\n    }); \n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser = {refreshUser} isLoggedIn = {isLoggedIn} userObj={userObj}/ > : \"Loading...\"}\n      <footer>&copy; {new Date().getFullYear()} Gwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\nimport firebase from \"./fBase\";\nimport \"./styles.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n\n"],"sourceRoot":""}